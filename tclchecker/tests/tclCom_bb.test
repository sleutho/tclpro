# tclCom_bb.test --
#
#	This file contains Black Box tests that run tclchecker on 
#	TclCom code that will produce all possible error and warning
#	messages that are specific to TclCom.
#
# Copyright (c) 1999-2000 by Ajuba Solutions.
# All rights reserved.
#
# RCS: @(#) $Id: tclCom_bb.test,v 1.9 2000/06/06 22:59:09 hershey Exp $

if {[string compare test [info procs test]] == 1} {
    lappend auto_path [file join [file dirname [info script]] ..]
    package require protest
    namespace import ::protest::*
}

set tclchecker [findExeFile tclchecker 1]

set echo echo

set pcxDir $::protest::sourceDirectory

# Test for -verbose package name.

test tclCom-1.1 {Test for -verbose package name} {
    set script {loadtypelib $a}
    set result [catch {exec $echo $script | $tclchecker -pcx $pcxDir -n -q -v} msg]
    set i [lsearch -exact $msg tclCom]
    if {$i != -1} {
	set msg [lindex $msg [expr {$i + 1}]]
    }
    list $result $msg 
} [list 0 $::protest::supportedVersions(TclCom)]

# Test to see if bodies of control structures are scanned for
# user--defined procs.

test tclCom-2.1 {test scanCmds: element} {} {
    set script {foreachitem x {a b c} $h {proc foo {} {}}; foo}
    set result [catch {exec $echo $script | $tclchecker -pcx $pcxDir -n -q -v} msg]
    set i [lsearch -exact $msg Errors:]
    set e [lindex $msg [expr {$i + 1}]]
    set i [lsearch -exact $msg Warnings:]
    set w [lindex $msg [expr {$i + 1}]]
    list $result $e $w
} [list 0 0 0]

test tclCom-2.2 {test scanCmds: element} {} {
    set script {foreachitem x {a b c} {proc foo {} {}}; foo}
    set result [catch {exec $echo $script | $tclchecker -pcx $pcxDir -n -q -v} msg]
    set i [lsearch -exact $msg Errors:]
    set e [lindex $msg [expr {$i + 1}]]
    set i [lsearch -exact $msg Warnings:]
    set w [lindex $msg [expr {$i + 1}]]
    list $result $e $w
} [list 0 0 0]

test tclCom-2.3 {test scanCmds: element} {} {
    set script {tclcom::foreachitem x {a b c} $h {proc foo {} {}}; foo}
    set result [catch {exec $echo $script | $tclchecker -pcx $pcxDir -n -q -v} msg]
    set i [lsearch -exact $msg Errors:]
    set e [lindex $msg [expr {$i + 1}]]
    set i [lsearch -exact $msg Warnings:]
    set w [lindex $msg [expr {$i + 1}]]
    list $result $e $w
} [list 0 0 0]

test tclCom-2.4 {test scanCmds: element} {} {
    set script {tclcom::foreachitem x {a b c} {proc foo {} {}}; foo}
    set result [catch {exec $echo $script | $tclchecker -pcx $pcxDir -n -q -v} msg]
    set i [lsearch -exact $msg Errors:]
    set e [lindex $msg [expr {$i + 1}]]
    set i [lsearch -exact $msg Warnings:]
    set w [lindex $msg [expr {$i + 1}]]
    list $result $e $w
} [list 0 0 0]

# Run code that trigers tclCom-specific message IDs.
# Currently, there are no such message IDs.

# cleanup
cleanupTests

