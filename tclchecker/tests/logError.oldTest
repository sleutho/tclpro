# logError.test --
#
#	This file contains black-box tests for the error logging
#	mechanism in TclPro Checker.  This test file doesn't use
#	the test command.  It should be combined with the use_bb.test
#	to generate the *Permute.tcl files.  RFE 1680
#
# Copyright (c) 1998-2000 by Ajuba Solutions
# All rights reserved.
#
# RCS: @(#) $Id: logError.oldTest,v 1.2 2000/05/30 22:24:54 wart Exp $

if {[string compare test [info procs resetAnalyzer]] == 1} {
    source [file  join [pwd] [file dirname [info script]] defs.tcl]
}

analyzer::init
set tmpInputFile [file join $::tcltest::temporaryDirectory tmpCheckerInputFile.tcl]
set tmpOutputFile [file join $::tcltest::temporaryDirectory tmpCheckerOutputFile.txt]

set incrVersion(Tcl7.3)			1.5
set incrVersion(Tcl7.4)			2.0
set incrVersion(Tcl7.5)			2.1
set incrVersion(Tcl7.6)			2.2
set incrVersion(Tcl8.0)			3.0
set incrVersion(Tcl8.1)			3.1
set incrVersion(Tcl8.2)			3.1

proc testLogFile {} {
    global tmpInputFile

    set inFile [open $tmpInputFile r]
    set ::analyzer::script [read $inFile]
    close $inFile

    set ::analyzer::file test
    set ::analyzer::currentLine 1
    analyzer::setQuiet 1
    analyzer::check $tmpInputFile
}

proc testLogVersion {tclVer tkVer incrVer} {
    global tmpInputFile

    coreTcl::init $tclVer
    coreTk::init  $tkVer
    incrTcl::init $incrVer

    catch {file delete -force $tmpInputFile}
    set outFile [open $tmpInputFile w]
    foreach {cmd expected} [set ::checkCoreTcl${tclVer}] {
	puts $outFile $cmd
    }
    foreach {cmd expected} [set ::checkCoreTk${tkVer}] {
	puts $outFile $cmd
    }
    foreach {cmd expected} [set ::checkIncrTcl${incrVer}] {
	puts $outFile $cmd
    }
    close $outFile

    testLogFile
}

resetUProcData
set outFile [open $tmpOutputFile w]
foreach tkVer $::protest::supportedVersions(Tk) {
    set tclVer $::protest::tclVersion(Tk$tkVer)
    set incrVer $incrVersion(Tcl$tclVer)
    resetAnalyzer
    set message::outChannel $outFile
    testLogVersion $tclVer $tkVer $incrVer
}
close $outFile

catch {file delete -force $tmpOutputFile}
catch {file delete -force $tmpInputFile}

# cleanup
cleanupTests
