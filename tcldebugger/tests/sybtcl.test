# sybtcl.test --
#
# This file contains tests for the sybtcl.pdx debugger extension file.
#
# Copyright (c) 1998-2000 by Ajuba Solutions
# All rights reserved.
#
# RCS: @(#) $Id: sybtcl.test,v 1.3 2001/10/17 19:04:06 andreas_kupries Exp $

if {[string compare test [info procs test]] == 1} {
    lappend auto_path [file join [file dirname [info script]] ..]
    package require protest
    namespace import ::protest::*
}

catch {parse} parseMsg
if {[regexp "invalid command" $parseMsg]} {
    package require parser
}

if {[string compare testGui [info procs testGui]] == 1} {
    source [file join $::tcltest::testsDirectory guiLaunch.tcl]
}
source [file join $::tcltest::testsDirectory .. sybtcl.pdx]

test sybtcl-1.1 {sybevent command} {
    testGui {
	proc sybevent {dummy body} {
	    eval $body
	}
	set a 0
	sybevent dummy {
	    global a
	    incr a
	    incr a
	    incr a
	    incr a
	    incr a
	    incr a
	    incr a
	}
	exit
    } {
	# step over the init code
	for {set i 1} {$i <= 2} {incr i} {
	    gui::run {dbg::step over}
	    waitForApp
	}
	
	# step into the 7 incr calls
	# if the incr calls were not instrumented, then we'll get an error.
	for {set i 1} {$i <= 9} {incr i} {
	    gui::run dbg::step
	    waitForApp
	}
	# get the 1st value in the list: "a"
	lindex [split [$var::valuText get 1.0 end] "\n"] 0
    }
} 6

test sybtcl-1.2 {sybnext command} {
    testGui {
	proc sybnext {args} {
	    eval [lindex $args 1]
	}
	set a 0
	sybnext dummy {
	    global a
	    incr a
	    incr a
	    incr a
	    incr a
	    incr a
	    incr a
	    incr a
	}
	exit
    } {
	# step over the init code
	for {set i 1} {$i <= 2} {incr i} {
	    gui::run {dbg::step over}
	    waitForApp
	}
	
	# step into the 7 incr calls
	# if the incr calls were not instrumented, then we'll get an error.
	for {set i 1} {$i <= 10} {incr i} {
	    gui::run dbg::step
	    waitForApp
	}
	# get the 1st value in the list: "a"
	lindex [split [$var::valuText get 1.0 end] "\n"] 0
    }
} 6

cleanupTests

if {[info exists tk_version] && !$tcl_interactive} {
    exit
}
